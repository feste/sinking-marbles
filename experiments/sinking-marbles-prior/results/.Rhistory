testFour <- function()
{
return(6 %in% sample(6,4,replace=TRUE))
}
testFour()
testFour()
testFour()
rep(testFour(),1000)
testFour()
?run
replicate(testFour(),1000)
?replicate
replicate(1000,testFour())
plotFourToss <- function(n)
{
ggplot(data.frame(Six=replicate(1000,testFour())), aes(x=Six)) +
geom_histogram()
}
plotFourToss(10)
plotFourToss(1000)
plotFourToss(1000)
plotFourToss(1000)
plotFourToss(1000)
plotFourToss(1000)
plotFourToss(1000)
plotFourToss(1000)
plotFourToss(1000)
plotFourToss(1000)
plotFourToss(10000)
plotFourToss(10000)
plotFourToss(10000)
plotFourToss(10000)
plotFourToss(10000)
plotFourToss(10000)
plotFourToss(10000)
plotFourToss(10000)
plotFourToss(10000)
plotFourToss(10000)
218/965
141/527
40000/12
3400*12
3400*13
3200*13
70000/900
77-52
900*52
70000/800
87.5-52
52+26
860*4
1+21+51+59+36
168/60
800*52+800*26
200*12
300*12
load("~/Dropbox/XPrag_2012/experiments/databases/comprehension.RData")
load("~/Dropbox/XPrag_2012/experiments/databases/production.RData")
summary(comp)
summary(prod)
comp$Modality = factor(x="comprehension",levels=c("comprehension","production"))
prod$Modality = factor(x="production",levels=c("comprehension","production"))
both = rbind(comp[,c("TrialType","Target","RedImpType","Experiment","Modality","ResponseType")],prod[,c("TrialType","Target","RedImpType","Experiment","Modality","ResponseType")])
crit = subset(both, TrialType == "target")
crit = droplevels(crit)
crit = subset(crit, !is.na(crit$Target))
crit$ExpImp = factor(paste(crit$Experiment,crit$RedImpType))
crit$TargetTrue = ifelse(crit$Target == "1", TRUE, FALSE)
agr = ddply(crit, .(ExpImp,Experiment,RedImpType,Modality), summarise, ym = mean(TargetTrue))
agr$SE = ddply(crit, .(ExpImp,Experiment,RedImpType,Modality), summarise, ym = se(TargetTrue))$ym
agr$YMin = agr$ym - agr$SE
agr$YMax = agr$ym + agr$SE
agr = subset(agr, RedImpType %in% c("simple implicature","complex implicature"))
agr$Exp = factor(x=agr$Experiment,levels=c("1","2","4","3"))
agr$MessageType = as.factor(ifelse(agr$Experiment %in% c("1","2"),"pictorial","linguistic"))
agr$AddedUtility = as.factor(ifelse(agr$Experiment %in% c("1","4"),"no","yes"))
agr$ImpModality = as.factor(paste(agr$RedImpType,agr$Modality))
p = ggplot(agr, aes(x=Exp,y=ym,fill=MessageType,alpha=AddedUtility)) +
geom_bar(stat="identity",color="black") +
scale_alpha_discrete(range=c(1,0.3)) +
scale_fill_manual(values=c("red","blue")) +
scale_x_discrete(name="",breaks=levels(agr$Exp),labels=c("pic","pic/util","ling","ling/util")) +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=-.25,color=I("black")) +
facet_wrap(~ImpModality,nrow=1) +
theme(axis.text.x=element_text(size=8),axis.title.x=element_blank(),axis.text.y=element_text(size=8),axis.title.y=element_text(size=8),legend.title=element_text(size=7),legend.text=element_text(size=7),plot.background=element_rect(fill="white"),panel.background=element_rect(fill="white"),panel.border=element_rect(fill=NA,color="black"))
p
81800000/51300000
1840000
1840000/687000
63,100/9,640,000
63100/9640000
8710000/13000000
39600/4090000
log(39600/4090000)
log(8710000/13000000)
log(63100/9640000)
1301/4
325.5/5
325.5/(3*1.2+2)
58*1.2
70+70+70+58+58
55.72-15.50
adj = function(x,theta)
{
return(x > theta)
}
adj(0.5,0.6)
adj(0.6,0.5)
adj(0.5,0.5)
al = list(height=1.9)
joe = list(height=1.5)
D = c(al, joe)
theta = 1.8
tall = function(x,theta)
{
return(height(x) > theta)
}
al = list(height=1.9)
joe = list(height=1.5)
tall(al,theta)
al$height
tall = function(x,theta)
{
return(x$height > theta)
}
tall(al,theta)
tall(joe, theta)
theta_tall = 1.8
tall = function(x,theta_adj)
{
return(x$height > theta_dj)
}
theta_tall = 1.8
tall(al,theta_tall)
tall = function(x,theta_adj)
{
return(x$height > theta_adj)
}
tall(al,theta_tall)
tall(joe, theta_tall)
scale_tall = seq(1,2,by=0.1)
scale_tall
D = data.frame(al=al, joe=joe)
Adj = data.frame(tall=tall)
parse_utt = function(who, what)
{
return(D[,who],Adj[,what])
}
parse_utt("al","tall")
D
D$all
D$al
D = data.frame(Name=c("al","joe"),Height=c(1.9,1.5))
row.names(D) = D$Name
D["al"]
D["al",]
tall = function(x,theta_adj)
{
return(x$Height > theta_adj)
}
al = D["al",]
joe = D["joe",]
tall(al,theta_tall)
tall(joe, theta_tall)
parse_utt("al","tall")
Adj
Adj = data.frame(Name="tall",Sem=tall)
tall
Ad
Adh
Adj
parse_utt_tall = function(who)
{
return(D[,Name==who])
}
parse_utt_tall("al")
parse_utt_tall = function(who)
{
return(D[,"Name"==who])
}
parse_utt_tall("al")
parse_utt_tall = function(who)
{
return(D["Name"==who,])
}
parse_utt_tall("al")
D
parse_utt_tall = function(who)
{
return(D[who,])
}
parse_utt_tall("al")
1.885/8.058
716/806
50/8
180/16
180/32
250*10/4 + 100*10/6 + 250*10/3 + 200*10/6 + 100*10/3 + 300*10/3
250*10/4
250*7.5/4
100*7.5/6
250*7.5/3
200*7.5/6
100*7.5/3
300*7.5/3
470+125+625+250+250+750
250+100+250+200+100+300
2400*3
5040+7200+23500+3500
22000*3
40365*3
121095+66000
39240 +177735
1 / ((2 + 3) * (4 - 6))
0.14/4
0.14/6
0.06/6
0.6*x=0.14
0.6/0.14
0.14/0.6
0.06/0.6
0.14/0.5
0.06/0.5
0.14/0.6
0.14/0.3
0.06/0.3
0.14/0.2
0.06/0.2
0.4*0.5
0.8*0.5
300*0.6
6000/24
17*24*60
259200/60
4320/24
60*10
22*24
120*0.20
plot(exp(seq(0,1,by=0.1)))
14.12/14.92
3.6/4.22
4.73/6.18
17.25/24.48
14.92/17.25
4.22/4.73
24.48/173
6.18/72
3.6/72
4.22/72
14.12/173
14.92/173
.30*30
9+.9
865*52
865*52+865*26
4^19
38*52
.08*1976
158/38
d = data.frame(QUD=rep(c("all?","any?"),each=12))
d
d = data.frame(QUD=rep(c("all?","any?"),each=12),State=rep(seq(0,3),6))
d
d = data.frame(QUD=rep(c("all?","any?"),each=12),State=rep(seq(0,3),each=6))
d
d = data.frame(QUD=rep(c("all?","any?"),each=12),State=rep(seq(0,3),6))
d
d = data.frame(QUD=rep(c("all?","any?"),each=12),State=rep(rep(seq(0,3),each=3),2))
d
d = data.frame(QUD=rep(c("all?","any?"),each=12),State=rep(rep(seq(0,3),each=3),2),Message=rep(c("some","all","none"),8))
d
d = data.frame(QUD=rep(c("all?","any?"),each=12),State=rep(rep(seq(0,3),each=3),2),Message=rep(c("some","all","none"),8))
d
d = data.frame(QUD=rep(c("all?","any?"),each=12),State=rep(rep(seq(0,3),each=3),2),Message=rep(c("some","all","none"),8),PseudoProb=c(0,0,1,.3,0,0,.6,0,0,.1,1,0,0,0,1,.2,0,0,.6,0,0,.2,1,0))
d
d$JointProbability = d$PseudoProb/sum(d$PseudoProb)
d
?ddply
ddply(d,summarize,.(QUD,Message),Probability=sum(JointProbability),QUD=QUD,Message=Message)
ddply(d,.(QUD,Message),summarize,Probability=sum(JointProbability),QUD=QUD,Message=Message)
ddply(d,.(QUD,Message),summarize,Probability=sum(JointProbability),QUD=QUD,Message=Message)
str(d)
ddply(d,.(QUD,Message),summarise,Probability=sum(JointProbability),QUD=QUD,Message=Message)
ddply(d,c("QUD","Message"),summarise,Probability=sum(JointProbability),QUD=QUD,Message=Message)
subset(d, QUD=="all?" & Message=="some")
sum(subset(d, QUD=="all?" & Message=="some")$JointProbability)
ddply(d,c("QUD","Message"),summarise,Probability=sum(JointProbability))
raw = c(0,1,3,2,0,0,0,5,4,0,0,0,0,2,4,3,0,0,0,5,4,0,0,0)
norm = raw/sum(raw)
norm
d = data.frame(QUD=rep(c("all?","any?"),each=12),State=rep(rep(seq(0,3),each=3),2),Message=rep(c("some","all","none"),8),PseudoProb=c(0,0,1,.3,0,0,.6,0,0,.1,1,0,0,0,1,.2,0,0,.6,0,0,.2,1,0))
d$JointProbability = d$PseudoProb/sum(d$PseudoProb)
d
d = data.frame(QUD=rep(c("all?","any?"),each=12),State=rep(rep(seq(0,3),each=3),2),Message=rep(c("some","all","none"),8),PseudoProb=c(0,0,4,1,0,0,3,0,0,2,5,0,0,0,4,2,0,0,4,0,0,3,5,0))
d$JointProbability = d$PseudoProb/sum(d$PseudoProb)
d
ddply(d,c("QUD","Message"),summarise,Probability=sum(JointProbability))
d1 = ddply(d,c("QUD","Message"),summarise,Probability=sum(JointProbability)) #  Probability is p(QUD, Message)
sum(d1)
sum(d1$Probability)
d2 = ddply(d, c("QUD"),summarise,Probability=Probability/sum(Probability)# Probability is p(Message|QUD)
)
d2 = ddply(d1, c("QUD"),summarise,Probability=Probability/sum(Probability))# Probability is p(Message|QUD)
d2
d2 = ddply(d1, c("QUD"),summarise,Message=Message,Probability=Probability/sum(Probability))# Probability is p(Message|QUD)
d2
d1
d2$Surprisal = -log(d2$Probability)
d2
?log
d2$Surprisal = -log2(d2$Probability)
d2
library(ggplot2)
source("summarySE.r")
setwd("~/cogsci/projects/stanford/projects/sinking_marbles/sinking_marbles/")
setwd("~/cogsci/projects/stanford/projects/sinking_marbles/sinking-marbles/experiment/sinking-marbles-prior/results/")
setwd("~/cogsci/projects/stanford/projects/sinking_marbles/sinking-marbles/experiments/sinking-marbles-prior/results/")
source("rscripts/summarySE.r")
r = read.table("mturk/sinking-marbles-prior.tsv", sep="\t", header=T)
r = read.table("mturk/sinking-marbles-prior.tsv", sep="\t", header=T)
r = read.table("data/sinking-marbles-prior.tsv", sep="\t", header=T)
r = r[,c("workerid", "rt", "effect", "cause", "object_level", "response", "object")]
r$object_level = factor(r$object_level, levels=c("object_high", "object_mid", "object_low"))
s = summarySE(r, measurevar="response", groupvars=c("effect", "object_level", "object"))
graph_title = "sinking-marbles-prior"
ggplot(s, aes(x=effect, y=response)) +
geom_point(aes(colour=factor(object_level)), stat="identity") +
geom_errorbar(aes(ymin=response-ci, ymax=response+ci, colour=factor(object_level)), width=.3) +
ylab("") +
xlab("") +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
ggsave(file=paste("graphs/"c(graph_title, ".png"), collapse=""), width=15, height=6, title=graph_title)
ggsave(file=paste("graphs/",c(graph_title, ".png"), collapse=""), width=15, height=6, title=graph_title)
ggsave(file=paste(c("graphs/",graph_title, ".png"), collapse=""), width=15, height=6, title=graph_title)
graph_title = "sinking-marbles-prior-with-labels"
ggplot(s, aes(x=effect, y=response)) +
geom_point(aes(colour=factor(object_level)), stat="identity") +
geom_errorbar(aes(ymin=response-ci, ymax=response+ci, colour=factor(object_level)), width=.3) +
geom_text(aes(label=object), size=3) +
ylab("") +
xlab("") +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
ggsave(file=paste(c("graphs/",graph_title, ".png"), collapse=""), width=15, height=6, title=graph_title)
head(s)
s$y = 0
ggplot(s, aes(x=response, y=y)) +
geom_point(aes(colour=factor(object_level)), stat="identity") +
geom_errorbar(aes(ymin=response-ci, ymax=response+ci, colour=factor(object_level)), width=.3) +
geom_text(aes(label=effect), size=3) +
ylab("") +
xlab("") +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
ggplot(s, aes(x=response, y=y)) +
geom_point(aes(colour=factor(object_level)), stat="identity") +
geom_errorbarh(aes(ymin=response-ci, ymax=response+ci, colour=factor(object_level)), width=.3) +
geom_text(aes(label=effect), size=3) +
ylab("") +
xlab("") +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
ggplot(s, aes(x=response, y=y)) +
geom_point(aes(colour=factor(object_level)), stat="identity") +
geom_errorbarh(aes(xmin=response-ci, xmax=response+ci, colour=factor(object_level)), width=.3) +
geom_text(aes(label=effect), size=3) +
ylab("") +
xlab("") +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
ggplot(s, aes(x=response, y=y)) +
geom_point(aes(colour=factor(object_level))) +
geom_errorbarh(aes(xmin=response-ci, xmax=response+ci, colour=factor(object_level)), width=.3)
ggplot(s, aes(x=response, y=y)) +
geom_point(aes(colour=factor(object_level)))
?geom_jitter
ggplot(s, aes(x=response, y=y)) +
geom_point(aes(colour=factor(object_level)))
ggplot(s, aes(x=response, y=y)) +
geom_jitter(aes(colour=factor(object_level)))
ggplot(s, aes(x=response, y=y)) +
geom_point(aes(colour=factor(object_level)))
ggplot(s, aes(x=response, y=y)) +
#geom_point(aes(colour=factor(object_level))) +
geom_jitter(aes(colour=factor(object_level)))
ggplot(s, aes(x=response, y=y)) +
geom_point(aes(colour=factor(object_level)))  +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
names(s)
s$yobject = as.numeric(ifelse(s$object_level == "object_high",0.25,ifelse(s$object_level =="object_mid",0,-0.25)))
ggplot(s, aes(x=response, y=yobject)) +
geom_point(aes(colour=factor(object_level)))  +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
ggplot(s, aes(x=response, y=yobject, fill=factor(object_level))) +
geom_histogram()  +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
ggplot(s, aes(x=response, fill=factor(object_level))) +
geom_histogram()  +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
graph_title = "sinking-marbles-prior-histogram"
ggsave(file=paste(c("graphs/",graph_title, ".png"), collapse=""), width=15, height=6, title=graph_title)
s$yobject = as.numeric(ifelse(s$object_level == "object_high",0.25,ifelse(s$object_level =="object_mid",0,-0.25)))
ggplot(s, aes(x=response, y=yobject)) +
geom_point(aes(colour=factor(object_level)))  +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
graph_title = "sinking-marbles-prior-distribution"
ggsave(file=paste(c("graphs/",graph_title, ".png"), collapse=""), width=15, height=6, title=graph_title)
ggplot(s, aes(x=response, fill=factor(object_level))) +
geom_histogram(position="dodge")  +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
graph_title = "sinking-marbles-prior-histogram"
ggsave(file=paste(c("graphs/",graph_title, ".png"), collapse=""), width=15, height=6, title=graph_title)
head(s)
ggplot(s, aes(x=response, y=yobject)) +
geom_point(aes(colour=factor(object_level)))  +
geom_text(aes(label=effect))
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
ggplot(s, aes(x=response, y=yobject)) +
geom_point(aes(colour=factor(object_level)))  +
geom_text(aes(label=effect)) +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
ggplot(s, aes(x=response, y=yobject)) +
geom_point(aes(colour=factor(object_level)))  +
geom_text(aes(label=effect,y=response-0.05)) +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
s$yobject = as.numeric(ifelse(s$object_level == "object_high",0.25,ifelse(s$object_level =="object_mid",0,-0.25)))
ggplot(s, aes(x=response, y=yobject)) +
geom_point(aes(colour=factor(object_level)))  +
geom_text(aes(label=effect,y=yobject-0.05)) +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
ggplot(s, aes(x=response, y=yobject)) +
geom_point(aes(colour=factor(object_level)))  +
geom_text(aes(label=effect,y=yobject-0.05),angle=45) +
theme_bw(18) +
theme(
axis.text.x = element_text(size=10, angle=-45, hjust=0)
,plot.background = element_blank()
,panel.grid.minor = element_blank()
)
graph_title = "sinking-marbles-prior-distribution"
ggsave(file=paste(c("graphs/",graph_title, ".png"), collapse=""), width=15, height=6, title=graph_title)
